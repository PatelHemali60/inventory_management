{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let LoginInventoryComponent = class LoginInventoryComponent {\n  ngOnInit() {\n    setTimeout(() => {\n      this.googleAuthenticate();\n    }, 50);\n    this.EmailId = new FormControl('', [Validators.required]);\n    this.Password = new FormControl('', [Validators.required]);\n    this.IsThirdPartyLogin = new FormControl('false');\n    this.loginForm = new FormGroup({\n      EmailId: this.EmailId,\n      Password: this.Password,\n      IsThirdPartyLogin: this.IsThirdPartyLogin\n    });\n  }\n  // private socialAuthService: SocialAuthService\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n    this.roles = [];\n    this.submitted = false;\n    this.loading = false;\n    this.IsThirdPartyLogin = true;\n    this.onSigninSuccess = new EventEmitter();\n  }\n  // {\n  //   \"EmailId\": \"patelhemu60@gmail.com\",\n  //   \"Password\": \"12345\",\n  //   \"IsThirdPartyLogin\": false\n  // }\n  //Reactive Form\n  get f() {\n    return this.loginForm.controls;\n  }\n  onLogin() {\n    this.submitted = true;\n    let data = {\n      EmailId: this.loginForm.value.EmailId,\n      Password: this.loginForm.value.Password,\n      IsThirdPartyLogin: false\n    };\n    this.authService.Login(data).subscribe({\n      next: () => {\n        alert(\"New User Creadted\");\n        this.router.navigate(['/dashboard']);\n      },\n      error: e => console.log(e)\n    });\n  }\n  googleAuthenticate() {}\n  RouteRagistration() {\n    this.router.navigate(['/Ragister']);\n  }\n  loginWithGoogle() {\n    // this.socialAuthService.signIn(GoogleLoginProvider.PROVIDER_ID);\n  }\n};\n__decorate([Output()], LoginInventoryComponent.prototype, \"onSigninSuccess\", void 0);\n__decorate([Input()], LoginInventoryComponent.prototype, \"clientId\", void 0);\nLoginInventoryComponent = __decorate([Component({\n  selector: 'app-login-inventory',\n  templateUrl: './login-inventory.component.html',\n  styleUrls: ['./login-inventory.component.scss']\n})], LoginInventoryComponent);","map":{"version":3,"names":["Component","LoginInventoryComponent","ngOnInit","setTimeout","googleAuthenticate","EmailId","FormControl","Validators","required","Password","IsThirdPartyLogin","loginForm","FormGroup","constructor","authService","router","roles","submitted","loading","onSigninSuccess","EventEmitter","f","controls","onLogin","data","value","Login","subscribe","next","alert","navigate","error","e","console","log","RouteRagistration","loginWithGoogle","__decorate","Output","Input","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\pc1\\Desktop\\inventory_dashboard\\inventory\\src\\app\\modules\\core\\component\\login-inventory\\login-inventory.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-login-inventory',\n  templateUrl: './login-inventory.component.html',\n  styleUrls: ['./login-inventory.component.scss']\n})\nexport class LoginInventoryComponent {\n  public errorMessage: any;\n  public EmailId!: FormControl;\n  public Password!: FormControl;\n  public roles: string[] = [];\n  public form!: FormGroup;\n  public loginForm!: FormGroup;\n  public submitted = false;\n  public loading = false;\n  public IsThirdPartyLogin :any = true;\n  @Output() onSigninSuccess = new EventEmitter();\n  @Input() clientId!: string;\n\n  ngOnInit(){\n\n\n    setTimeout(()=>{this.googleAuthenticate()},50);\n\n    this.EmailId = new FormControl('', [Validators.required]);\n    this.Password = new FormControl('', [Validators.required]);\n    this.IsThirdPartyLogin = new FormControl('false');\n\n    this.loginForm = new FormGroup({\n      EmailId: this.EmailId,\n      Password: this.Password,\n      IsThirdPartyLogin: this.IsThirdPartyLogin\n    });\n\n  }\n\n  // private socialAuthService: SocialAuthService\nconstructor(private authService:AuthService, private router: Router){\n\n}\n\n\n// {\n//   \"EmailId\": \"patelhemu60@gmail.com\",\n//   \"Password\": \"12345\",\n//   \"IsThirdPartyLogin\": false\n// }\n\n  //Reactive Form\n  get f(): { [key: string]: AbstractControl } {\n    return this.loginForm.controls;\n  }\n\npublic onLogin(): void {\n  this.submitted = true;\n\n  let data = {\n    EmailId: this.loginForm.value.EmailId,\n    Password: this.loginForm.value.Password,\n    IsThirdPartyLogin:false\n  }\n  this.authService.Login(data).subscribe({\n    next:() => {\n      alert(\"New User Creadted\");\n      this.router.navigate(['/dashboard'])\n    },\n    error:(e) => console.log(e)\n  });\n\n}\n\ngoogleAuthenticate(){\n\n}\n\npublic RouteRagistration(){\n  this.router.navigate(['/Ragister'])\n}\n\nloginWithGoogle(): void {\n  // this.socialAuthService.signIn(GoogleLoginProvider.PROVIDER_ID);\n}\n// logOut(): void {\n//   this.socialAuthService.signOut();\n// }\n\n}\n\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAOlC,WAAMC,uBAAuB,GAA7B,MAAMA,uBAAuB;EAalCC,QAAQA,CAAA;IAGNC,UAAU,CAAC,MAAI;MAAC,IAAI,CAACC,kBAAkB,EAAE;IAAA,CAAC,EAAC,EAAE,CAAC;IAE9C,IAAI,CAACC,OAAO,GAAG,IAAIC,WAAW,CAAC,EAAE,EAAE,CAACC,UAAU,CAACC,QAAQ,CAAC,CAAC;IACzD,IAAI,CAACC,QAAQ,GAAG,IAAIH,WAAW,CAAC,EAAE,EAAE,CAACC,UAAU,CAACC,QAAQ,CAAC,CAAC;IAC1D,IAAI,CAACE,iBAAiB,GAAG,IAAIJ,WAAW,CAAC,OAAO,CAAC;IAEjD,IAAI,CAACK,SAAS,GAAG,IAAIC,SAAS,CAAC;MAC7BP,OAAO,EAAE,IAAI,CAACA,OAAO;MACrBI,QAAQ,EAAE,IAAI,CAACA,QAAQ;MACvBC,iBAAiB,EAAE,IAAI,CAACA;KACzB,CAAC;EAEJ;EAEA;EACFG,YAAoBC,WAAuB,EAAUC,MAAc;IAA/C,KAAAD,WAAW,GAAXA,WAAW;IAAsB,KAAAC,MAAM,GAANA,MAAM;IA3BlD,KAAAC,KAAK,GAAa,EAAE;IAGpB,KAAAC,SAAS,GAAG,KAAK;IACjB,KAAAC,OAAO,GAAG,KAAK;IACf,KAAAR,iBAAiB,GAAQ,IAAI;IAC1B,KAAAS,eAAe,GAAG,IAAIC,YAAY,EAAE;EAuBhD;EAGA;EACA;EACA;EACA;EACA;EAEE;EACA,IAAIC,CAACA,CAAA;IACH,OAAO,IAAI,CAACV,SAAS,CAACW,QAAQ;EAChC;EAEKC,OAAOA,CAAA;IACZ,IAAI,CAACN,SAAS,GAAG,IAAI;IAErB,IAAIO,IAAI,GAAG;MACTnB,OAAO,EAAE,IAAI,CAACM,SAAS,CAACc,KAAK,CAACpB,OAAO;MACrCI,QAAQ,EAAE,IAAI,CAACE,SAAS,CAACc,KAAK,CAAChB,QAAQ;MACvCC,iBAAiB,EAAC;KACnB;IACD,IAAI,CAACI,WAAW,CAACY,KAAK,CAACF,IAAI,CAAC,CAACG,SAAS,CAAC;MACrCC,IAAI,EAACA,CAAA,KAAK;QACRC,KAAK,CAAC,mBAAmB,CAAC;QAC1B,IAAI,CAACd,MAAM,CAACe,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC;MACtC,CAAC;MACDC,KAAK,EAAEC,CAAC,IAAKC,OAAO,CAACC,GAAG,CAACF,CAAC;KAC3B,CAAC;EAEJ;EAEA5B,kBAAkBA,CAAA,GAElB;EAEO+B,iBAAiBA,CAAA;IACtB,IAAI,CAACpB,MAAM,CAACe,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC;EACrC;EAEAM,eAAeA,CAAA;IACb;EAAA;CAMD;AAtEWC,UAAA,EAATC,MAAM,EAAE,C,+DAAsC;AACtCD,UAAA,EAARE,KAAK,EAAE,C,wDAAmB;AAXhBtC,uBAAuB,GAAAoC,UAAA,EALnCrC,SAAS,CAAC;EACTwC,QAAQ,EAAE,qBAAqB;EAC/BC,WAAW,EAAE,kCAAkC;EAC/CC,SAAS,EAAE,CAAC,kCAAkC;CAC/C,CAAC,C,EACWzC,uBAAuB,CAgFnC"},"metadata":{},"sourceType":"module","externalDependencies":[]}