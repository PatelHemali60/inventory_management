{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let RagiatrationInventoryComponent = class RagiatrationInventoryComponent {\n  ngOnInit() {\n    setTimeout(() => {\n      this.googleAuthenticate();\n    }, 50);\n    this.Roles = [];\n    this.FirstName = new FormControl('', [Validators.required]);\n    this.LastName = new FormControl('', [Validators.required]);\n    this.EmailId = new FormControl('', [Validators.required]);\n    this.Password = new FormControl('', [Validators.required]);\n    this.RoleId = new FormControl('1', [Validators.required]);\n    this.RagistrationForm = new FormGroup({\n      FirstName: this.FirstName,\n      LastName: this.LastName,\n      EmailId: this.EmailId,\n      Password: this.Password,\n      RoleId: this.RoleId\n    });\n  }\n  // \"Id\": 0,\n  // \"FirstName\": \"string\",\n  // \"LastName\": \"string\",\n  // \"EmailId\": \"string\",\n  // \"Password\": \"string\",\n  // \"RoleId\": 0\n  // \"Data\": [\n  //   {\n  //     \"Id\": 1,\n  //     \"Name\": \"Admin\",\n  //     \"Description\": \"Admin\",\n  //     \"IsActive\": true\n  //   },\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n    this.Roles = [];\n    this.roles = [];\n    this.submitted = false;\n    this.loading = false;\n    this.getDepartmentList();\n    this.isAddMode = !this.id;\n  }\n  //Reactive Form\n  get f() {\n    return this.RagistrationForm.controls;\n  }\n  onSubmit() {\n    debugger;\n    // this.submitted = true;\n    if (this.isAddMode) {\n      this.createUser();\n    } else {\n      // this.updateUser();\n    }\n  }\n  //get rold id list\n  getDepartmentList() {\n    this.authService.getDepartments().subscribe({\n      next: data => {\n        // console.log(data , 'roles')\n        this.Roles = data.Data;\n      },\n      error: e => console.log(e)\n    });\n  }\n  //creat user\n  //Post data to db\n  createUser() {\n    this.authService.createUser(this.RagistrationForm.value).subscribe({\n      next: () => {\n        alert(\"New User Creadted\");\n        this.navigateToList();\n      },\n      error: e => console.log(e)\n    });\n  }\n  //route to users list\n  navigateToList() {\n    this.router.navigate(['/login']);\n  }\n  googleAuthenticate() {}\n};\nRagiatrationInventoryComponent = __decorate([Component({\n  selector: 'app-ragiatration-inventory',\n  templateUrl: './ragiatration-inventory.component.html',\n  styleUrls: ['./ragiatration-inventory.component.scss']\n})], RagiatrationInventoryComponent);","map":{"version":3,"names":["Component","RagiatrationInventoryComponent","ngOnInit","setTimeout","googleAuthenticate","Roles","FirstName","FormControl","Validators","required","LastName","EmailId","Password","RoleId","RagistrationForm","FormGroup","constructor","authService","router","roles","submitted","loading","getDepartmentList","isAddMode","id","f","controls","onSubmit","createUser","getDepartments","subscribe","next","data","Data","error","e","console","log","value","alert","navigateToList","navigate","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\pc1\\Desktop\\inventory_dashboard\\inventory\\src\\app\\modules\\core\\component\\ragiatration-inventory\\ragiatration-inventory.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-ragiatration-inventory',\n  templateUrl: './ragiatration-inventory.component.html',\n  styleUrls: ['./ragiatration-inventory.component.scss']\n})\nexport class RagiatrationInventoryComponent {\n\n  public Roles: any[] = [];\n  public errorMessage: any;\n  public FirstName!:FormControl;\n  public LastName!:FormControl;\n  public EmailId!: FormControl;\n  public RoleId!:FormControl;\n  public Password!: FormControl;\n  public roles: string[] = [];\n  public form!: FormGroup;\n  public RagistrationForm!: FormGroup;\n  public submitted = false;\n  public loading = false;\n  private isAddMode: boolean;\n  private id!: number;\n\n  ngOnInit(){\n\n    setTimeout(()=>{this.googleAuthenticate()},50);\n    this.Roles =  [];\n\n    this.FirstName =new FormControl('', [Validators.required]);\n    this.LastName =new FormControl('', [Validators.required]);\n    this.EmailId = new FormControl('', [Validators.required]);\n    this.Password = new FormControl('', [Validators.required]);\n    this.RoleId = new FormControl('1', [Validators.required]);\n\n    this.RagistrationForm = new FormGroup({\n      FirstName: this.FirstName,\n      LastName: this.LastName,\n      EmailId: this.EmailId,\n      Password: this.Password,\n      RoleId : this.RoleId\n    });\n\n  }\n\n  // \"Id\": 0,\n  // \"FirstName\": \"string\",\n  // \"LastName\": \"string\",\n  // \"EmailId\": \"string\",\n  // \"Password\": \"string\",\n  // \"RoleId\": 0\n\n  // \"Data\": [\n  //   {\n  //     \"Id\": 1,\n  //     \"Name\": \"Admin\",\n  //     \"Description\": \"Admin\",\n  //     \"IsActive\": true\n  //   },\n\nconstructor(private authService:AuthService, private router: Router){\n  this.getDepartmentList();\n  this.isAddMode = !this.id;\n\n}\n\n  //Reactive Form\n  get f(): { [key: string]: AbstractControl } {\n    return this.RagistrationForm.controls;\n  }\n\npublic onSubmit(): void {\n  debugger\n  // this.submitted = true;\n\n  if (this.isAddMode) {\n    this.createUser();\n  }\n  else {\n    // this.updateUser();\n  }\n}\n\n\n\n  //get rold id list\n  private getDepartmentList(): void {\n    this.authService.getDepartments().subscribe({\n      next:(data) => {\n\n        // console.log(data , 'roles')\n        this.Roles = data.Data;\n      },\n      error:(e) => console.log(e)\n    });\n  }\n\n  //creat user\n   //Post data to db\n   public createUser(): void {\n    this.authService.createUser(this.RagistrationForm.value).subscribe({\n      next:() => {\n        alert(\"New User Creadted\");\n\n        this.navigateToList();\n      },\n      error:(e) => console.log(e)\n    });\n  }\n\n\n //route to users list\n public navigateToList(): void {\n  this.router.navigate(['/login'])\n}\n\ngoogleAuthenticate(){\n\n}\n\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}